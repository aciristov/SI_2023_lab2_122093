2.
Класата User сама по себе не треба да е вклучена во control flow graph. CFG се употребува да се прикаже течењето на функционалноста на методите, без разлика од структурата на класата. Дефинирање на класите е посебна од CFG со специфична функционалност. 


3.
Цикломатска вредност се пресметува со помош на control flow diagram од претходната задача. Целта е да се измерат засебните линеарни патишта во самиот код. Ако е поголема цикломатската комплекснот тоа значи дека е поголем бројот на потенцијални патишта, циклуси, и потенцијални грешки кој е потешко да се откријат. За да го употребиме треба да се избројат бројот на јазли, бројот на рабови и бројот на региони како компоненти, според формулата M како цикломатска вредност. M = E-N+2*P . E е бројот на рабови, Н е бројот на јазли а P е бројот на региони.
Според мојот граф што е прикажан на сликата, во задачата имам 39 рабови (E), јазил 33 (N) и две поврзани компоненти.
Значи ќе имаме: 39 - 33 + 2*2 = 2. Цикломатската вредност е 2, тоа значи дека имам повеќе од еден линеарен пат во кодот.

4.
Според Every Branch критериум значи дека сите случаеви е потребно да се опфатат, како следниве:

А)
Како атрибути оваа функционалност треба да се повика со 
 if (user==null || user.getPassword()==null || user.getEmail()==null){
            throw new RuntimeException("Mandatory information missing!");
 }

оваа функционалност треба да се повика со следни атрибути: промена на user==null во user != null, па следен повик со user.getPassword()!= null, па user.getEmail()!=null
па следни повици може да се комбинираат со по две измени од вкупно три атрибути, па на крај со различни сите три атрибути. На крај би се истестирало со типот на exception што го дава
самамиот метод.

Б)
        if (user.getUsername()==null){
            user.setUsername(user.getEmail());
    	}
Во оваа функција можеме да истестираме дали (user.getUsername()!=null) ќе го повика методот setUsername. Не би требало затоа што усернаме треба да е null.

Во следните случаеви исто како и претходно ќе се опфатат сите сценарија кои би биле ризик за да се направи грешка.


5. Со multiple Condition criterion треба да се опфатат сите комбинации или гранки што би биле за повик на методот. Имаме три аттрибути па би направиле три посебни комбинации. 
if (user==null || user.getPassword()==null || user.getEmail()==null).
А) (user == null) Б) (user.getPassword() == null) Ц) (user.getEmail() == null) Д) User има и password i email
Како прво тест сценарио би се извршило под А, за наредно би се извршило под Б па под Ц, i под Д) треба кодот воопшто да не влезе внатре, туку да иде во else.